?plot
plot(0:max(degree(G)), cbind(test, degree.distribution(G))
)_
plot(0:max(degree(G)), cbind(test, degree.distribution(G)))
0:max(degree(G)
)
max(degree(G))
test.data<-cbind(test, degree.distribution(G))
library(ggplot2)
qplot(x=0:34, y=test.data, geom="line")
row.names(test.data)
cbind(0:34, test.data)
test
loess(test ~ degree.distribution(G))
summary(loess(test ~ degree.distribution(G)))
?loess
plot(loess(test ~ degree.distribution(G)))
plot(loess(test ~ degree.distribution(G)))
glm(test ~ degree.distribution(G))
summary(glm(test ~ degree.distribution(G)))
plot(test, degree.distribution(G))
?ks.test
ks.test(degree.distribution(G), "pbinom")
ks.test(degree.distribution(G), test)
chisq.test(degree.distribution(G), test)
chisq.test(degree.distribution(G), rnorm(35))
plot(degree.distribution(G))
plot(test)
?loess
test.data
summary(degree.distribution(G) ~ test, family=binomial(link="probit"))
summary(degree.distribution(G) ~ test, family=binomial(link="probit")))
summary(degree.distribution(G) ~ test, family=binomial(link="probit"))
glm(degree.distribution(G) ~ test, family=binomial(link="probit"))
glm(degree.distribution(G) ~ test)
summary(glm(degree.distribution(G) ~ test))
?nls
nls(degree.distribution(G) ~ test)
?nls
degree.distribution(G)
test
nls(test ~ degree.distribution(G))
glm(test ~ degree.distribution(G))
summary(glm(test ~ degree.distribution(G)))
predict(glm(test ~ degree.distribution(G)))
nls(degree.distribution(G)~test)
plot(test, degree.distribution(G))
degree.distribution(G)
qplot(test, degree.distribution(G), geom="smooth")
lm(test ~ degree.distribution(G))
summary(lm(test ~ degree.distribution(G)))
lm.fit(lm(test ~ degree.distribution(G)))
?lm.fit
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)                                                      #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(lm(binom.dens ~ dd))#
}#
#
graph.fits<-lapply(graph.files, binom.fit)
summary(graph.fits[[1]])
names(graph.fits)
graph.fits
names(graph.fits)<-graph.files
names(graph.fits)
graph.fits[[1]]
names(graph.fits[[1]])
graph.fits[[1]]$coeff
library(xtable)
xtable(graph.fits[[1]])
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)                                                      #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,dd,binom.dens))#
}#
#
graph.fits<-lapply(graph.files, binom.fit)
graph.fits
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)                                                      #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
graph.fits<-lapply(graph.files, binom.fit)
graph.fits
do.call(rbind, graph.fits)
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)                                                      #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)
fit.df
summary(fit.df)
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)                                                      #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)
summary(fit.df)
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(x=degree))+geom_point(aes(y=deg.dist))+geom_point(aes(y=binom.fit))#
    ggsave(plot=fit.plot, filname=paste("images/",as.character(f),"_fitplot.pdf",sep=""))#
}
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(x=degree))+geom_point(aes(y=deg.dist))+geom_point(aes(y=binom.fit))#
    ggsave(plot=fit.plot, filname=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(x=degree))+geom_point(aes(y=deg.dist))+geom_point(aes(y=binom.fit))#
    print(fit.plot)#
    # ggsave(plot=fit.plot, filname=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df)) {#
    print(g)#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(x=degree))+geom_point(aes(y=deg.dist))+geom_point(aes(y=binom.fit))#
    print(fit.plot)#
    # ggsave(plot=fit.plot, filname=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df$graph)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(x=degree))+geom_point(aes(y=deg.dist))+geom_point(aes(y=binom.fit))#
    ggsave(plot=fit.plot, filname=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df$graph)) {#
    graph.df<-subset(fit.df, graph==g)#
    strsplit()#
    fit.plot<-ggplot(graph.df, aes(x=degree))+geom_point(aes(y=deg.dist))+geom_point(aes(y=binom.fit))#
    ggsave(plot=fit.plot, filename=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df$graph)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(x=degree))+geom_point(aes(y=deg.dist))+geom_point(aes(y=binom.fit))#
    ggsave(plot=fit.plot, filename=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df$graph)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(x=degree))+geom_point(aes(y=deg.dist))+geom_point(aes(y=binom))#
    ggsave(plot=fit.plot, filename=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df$graph)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(xmin=degree-.5, xmax=degree+.5, ymin=0, ymax=deg.dist))+#
        geom_rect()+geom_point(aes(x=degree, y=binom))+geom_line(aes(x=degree, y=binom))#
    ggsave(plot=fit.plot, filename=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df$graph)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(xmin=degree-.5, xmax=degree+.5, ymin=0, ymax=deg.dist))+#
        geom_rect(aes(fill="darkgrey"), name="Observed Degree")+#
        geom_point(aes(x=degree, y=binom, color="darkred"))+#
        geom_line(aes(x=degree, y=binom, color="red"))+#
        scale_fill_manual(values=c("darkgrey"="darkgrey"))+#
        scale_color_manual(values=c("darkred"="darkred","red"="red"), name="Fitted Binomial")+#
        xlab("Degree")+ylab("Density")+theme_bw()#
    ggsave(plot=fit.plot, filename=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}
?scale_color_manual
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df$graph)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(xmin=degree-.5, xmax=degree+.5, ymin=0, ymax=deg.dist))+#
        geom_rect(aes(fill="darkgrey"))+#
        geom_point(aes(x=degree, y=binom, color="darkred"))+#
        geom_line(aes(x=degree, y=binom, color="darkred"))+#
        scale_fill_manual(values=c("darkgrey"="darkgrey"), name="Observed Degree", breaks="darkgrey", label="")+#
        scale_color_manual(values=c("darkred"="darkred"), name="Fitted Binomial", breaks="darkred", label="")+#
        xlab("Degree")+ylab("Density")+theme_bw()#
    ggsave(plot=fit.plot, filename=paste("images/",as.character(g),"_fitplot.pdf",sep=""))
)
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df$graph)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(xmin=degree-.5, xmax=degree+.5, ymin=0, ymax=deg.dist))+#
        geom_rect(aes(fill="darkgrey"))+#
        geom_point(aes(x=degree, y=binom, color="darkred"))+#
        geom_line(aes(x=degree, y=binom, color="darkred"))+#
        scale_fill_manual(values=c("darkgrey"="darkgrey"), name="Observed Degree", breaks="darkgrey", label="")+#
        scale_color_manual(values=c("darkred"="darkred"), name="Fitted Binomial", breaks="darkred", label="")+#
        xlab("Degree")+ylab("Density")+theme_bw()#
    ggsave(plot=fit.plot, filename=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df$graph)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(xmin=degree-.5, xmax=degree+.5, ymin=0, ymax=deg.dist))+#
        geom_rect(aes(fill="darkgrey"))+#
        geom_point(aes(x=degree, y=binom, color="darkred"))+#
        geom_line(aes(x=degree, y=binom, color="darkred"))+#
        scale_fill_manual(values=c("darkgrey"="darkgrey"), name="Observed Degree", breaks="darkgrey", label="")+#
        scale_color_manual(values=c("darkred"="darkred"), name="Fitted Binomial", breaks="darkred", label="")+#
        scale_x_continuous(limits=c(0,65))+xlab("Degree")+ylab("Density")+theme_bw()#
    ggsave(plot=fit.plot, filename=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# File-Name:       erdos_renyi.R           #
# Date:            2011-04-26                                #
# Author:          Drew Conway#
# Email:           drew.conway@nyu.edu                                      #
# Purpose:         Calculate goodness of fit between degree distributions#
#                   for ER and GMM models#
# Data Used:       data/*#
# Packages Used:   igraph #
# Machine:         Drew Conway's MacBook Pro#
#
# Copyright (c) 2011, under the Simplified BSD License.  #
# For more information on FreeBSD see: http://www.opensource.org/licenses/bsd-license.php#
# All rights reserved.   #
#
library(igraph)#
library(ggplot2)                                                     #
#
degree.dist<-read.csv("data/degree_dist.csv", stringsAsFactors=TRUE)#
data.dir<-"data/"#
graph.files<-dir(data.dir)[-1]#
#
# A function to calculate a GLM with binomial link#
binom.fit<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    dd<-degree.distribution(G)#
    binom.dens<-dbinom(0:max(degree(G)), length(V(G)), 0.5)#
    return(cbind(path,0:max(degree(G)),dd,binom.dens))#
}#
#
# Collect all of the fit data into a single data frame#
graph.fits<-lapply(graph.files, binom.fit)#
fit.df<-data.frame(do.call(rbind, graph.fits), stringsAsFactors=FALSE)#
names(fit.df)<-c("graph","degree","deg.dist","binom")#
fit.df$graph<-as.factor(fit.df$graph)#
fit.df$degree<-as.numeric(fit.df$degree)#
fit.df$deg.dist<-as.numeric(fit.df$deg.dist)#
fit.df$binom<-as.numeric(fit.df$binom)#
#
for(g in levels(fit.df$graph)) {#
    graph.df<-subset(fit.df, graph==g)#
    fit.plot<-ggplot(graph.df, aes(xmin=degree-.5, xmax=degree+.5, ymin=0, ymax=deg.dist))+#
        geom_rect(aes(fill="darkgrey"))+#
        geom_point(aes(x=degree, y=binom, color="darkred"))+#
        geom_line(aes(x=degree, y=binom, color="darkred"))+#
        scale_fill_manual(values=c("darkgrey"="darkgrey"), name="Observed Degree", breaks="darkgrey", label="")+#
        scale_color_manual(values=c("darkred"="darkred"), name="Fitted Binomial", breaks="darkred", label="")+#
        scale_x_continuous(limits=c(0,65))+xlab("Degree")+ylab("Density")+theme_bw()#
    ggsave(plot=fit.plot, filename=paste("images/",as.character(g),"_fitplot.pdf",sep=""))#
}#
#
# Calculate statistical fit with simple linear model#
fit.graph<-function(g) {#
    graph.df<-graph.df<-subset(fit.df, graph==g)#
    return(lm(graph.df$binom ~ graph.df$deg.dist))#
}#
#
graph.lm<-lapply(levels(fit.df$graph), fit.graph)
graph.lm
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# Calculate statistical fit with simple linear model#
fit.graph<-function(g) {#
    graph.df<-graph.df<-subset(fit.df, graph==g)#
    return(lm(graph.df$binom ~ graph.df$deg.dist))#
}#
#
graph.names<-levels(fit.df$graph)#
graph.lm<-lapply(graph.names, fit.graph)#
names(graph.lm)<-graph.names
graph.lm
?fitted
fitted.values(graph.lm[[1]])
plot(fitted.values(graph.lm[[1]]))
length(graph.lm)
graph.lm[[6]]
graph.lm[6]
summary(graph.lm[6])
summary(graph.lm[[6]])
summary(graph.lm[[1]])
summary(graph.lm7])
summary(graph.lm[7])
summary(graph.lm[[7]])
summary(graph.lm[[7]])
summary(graph.lm[[2]])
summary(graph.lm[[4]])
summary(graph.lm[[3]])
fit.df$deg.dist
?ks.test
?ks.test
?ksmooth
?confint
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
#
# Calculate statistical fit with simple linear model#
fit.graph<-function(g) {#
    graph.df<-graph.df<-subset(fit.df, graph==g)#
    return(lm(graph.df$binom ~ graph.df$deg.dist))#
}#
#
fit.ks<-function(g) {#
    graph.df<-graph.df<-subset(fit.df, graph==g)#
    return(ks.test(graph.df$deg.dist, graph.df$binom))#
}#
#
graph.names<-levels(fit.df$graph)#
graph.lm<-lapply(graph.names, fit.graph)#
names(graph.lm)<-graph.names#
#
graph.ks<-lapply(graph.names, fit.ks)#
names(graph.ks)<-graph.names
graph.ks
?ks.test
library(vcd)
?goodfit
G
?degree.distribution
degree(G)
?hist
hist(degree(G), breaks=0:max(degree(G)), plot=F)
sum(hist(degree(G), breaks=0:max(degree(G)), plot=F)$counts)
dummy <- rbinom(100, size = 6, prob = 0.5)
dummy
rbinom(100, size = 50, prob = 0.5)
degree(G)
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# Fit distributions using MLE#
fit.mle<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    deg<-degree(G)#
    return(goodfit(deg, type="binomial" par=list(size=length(V(G)), prob=0.5)))#
}#
#
graph.mle<-lapply(graph.files, fit.mle)#
names(graph.mle)<-graph.names
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# Fit distributions using MLE#
fit.mle<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    deg<-degree(G)#
    return(goodfit(deg, type="binomial", par=list(size=length(V(G)), prob=0.5)))#
}#
#
graph.mle<-lapply(graph.files, fit.mle)#
names(graph.mle)<-graph.names
graph.mle
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
fit.mle<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    deg<-degree(G)#
    return(goodfit(deg, type="binomial", par=list(size=length(V(G)), prob=0.5)), method="ML")#
}#
#
graph.mle<-lapply(graph.files, fit.mle)#
names(graph.mle)<-graph.names
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# Fit distributions using MLE#
fit.mle<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    deg<-degree(G)#
    return(goodfit(deg, type="binomial", par=list(size=length(V(G)), prob=0.5)))#
}#
#
graph.mle<-lapply(graph.files, fit.mle)#
names(graph.mle)<-graph.names
summary(graph.mle[[1]])
plot(graph.mle[[1]])
?ks.test
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
fit.ks<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    deg<-degree(G)#
    return(ks.test(deg, "pbinom", size=length(V(G)), prob=0.5))#
}#
#
graph.ks<-lapply(graph.files, fit.ks)#
names(graph.ks)<-graph.names
graph.ks[[1]]
graph.ks[[2]]
ks.test(rbinom(100, 50, 0.5), "pbinom", size=50, prob=0.5)
ks.test(rbinom(100, 50, 0.5), "pbinom", size=50, prob=0.5)
ks.test(rbinom(100, 50, 0.5), "pbinom", size=50, prob=0.5)
ks.test(rbinom(100, 50, 0.5), "pbinom", size=50, prob=0.5)
ks.test(rbinom(100, 50, 0.5), "pbinom", size=50, prob=0.5)
ks.test(rbinom(100, 50, 0.5), "pbinom", size=50, prob=0.5)
ks.test(rbinom(100, 50, 0.5), "pbinom", size=50, prob=0.5)
ks.test(rbinom(100, 50, 0.5), "pbinom", size=50, prob=0.5)
ks.test(rbinom(100, 50, 0.5), "pbinom", size=50, prob=0.5)
x.wei<-rweibull(n=200,shape=2.1,scale=1.1)
x.wei
plot(graph.ks[[1]])
?ks.test
?ks.test
ks.test(rbinom(100, 50, 0.5), "pbinom", size=50, prob=0.5)
ks.test(rbinom(100, 50, 0.5), "pbinom", size=50, prob=0.5)
RSiteSearch("ks.test ties continuous")
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# Fit distributions using minimum Chi-squared#
fit.chisqr<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    deg<-degree(G)#
    return(goodfit(deg, type="binomial", par=list(size=length(V(G)), prob=0.5)))#
}#
#
graph.chisqr<-lapply(graph.files, fit.chisqr)#
names(graph.chisqr)<-graph.names
graph.chisqr[[1]]
?goodfit
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
fit.chisqr<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    deg<-degree(G)#
    print(summary(goodfit(deg, type="binomial", par=list(size=length(V(G)), prob=0.5), method="ML")))#
}#
#
graph.chisqr<-lapply(graph.files, fit.chisqr)
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# Fit distributions using minimum Chi-squared#
fit.chisqr<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    deg<-degree(G)#
    return(goodfit(deg, type="binomial", par=list(size=length(V(G)), prob=0.5)))#
}#
#
graph.chisqr<-lapply(graph.files, fit.chisqr)
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
# Fit distributions using minimum Chi-squared#
fit.chisqr<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    deg<-degree(G)#
    return(goodfit(deg, type="binomial", par=list(size=length(V(G)), prob=0.5)))#
}#
#
graph.chisqr<-lapply(graph.files, fit.chisqr)#
names(graph.chisqr)<-graph.names
names(graph.chisqr)
summary(graph.chisqr[[1]])
xtable(graph.chisqr[[1]])
setwd('/Users/agconway/Documents/GMM/GMM/examples/simulations/erdos_renyi')
fit.chisqr<-function(path) {#
    G<-read.graph(paste(data.dir,path,sep=""), format="graphml")#
    deg<-degree(G)#
    return(goodfit(deg, type="binomial", method="MinChisq", par=list(size=length(V(G)), prob=0.5)))#
}#
#
graph.chisqr<-lapply(graph.files, fit.chisqr)#
names(graph.chisqr)<-graph.names
summary(graph.chisqr[[1]])
summary(graph.chisqr[[2]])
summary(graph.chisqr[[23])
summary(graph.chisqr[[3])
summary(graph.chisqr[[3]])
??chisq.test
?chisq.test
test.df<-subset(fit.df, graph=="GMM SIMULATION-(gnp_random_graph(25,0.5))_with_int_labels_50.graphml")
test.df
chisq.test(test.df$deg.dist, test.df$binom)
?chisq.test
goodfit(degree(G), type="binomial", method="ML", par=list(size=50, prob=0.5))
summary(goodfit(degree(G), type="binomial", method="ML", par=list(size=50, prob=0.5)))
H<-read.graph("data/GMM SIMULATION-(gnp_random_graph(50,0.5))_with_int_labels_75.graphml", format="graphml")
summary(goodfit(degree(H), type="binomial", method="ML", par=list(size=75, prob=0.5)))
length(degree(H))
names(graph.chisqr)
summary(graph.chisqr[[3]])
?fitdistr
dummy <- rbinom(100, size = 6, prob = 0.5
)
goodfit(dummy, type = "binomial", par = list(prob = 0.6, size = 6))
summary(goodfit(dummy, type = "binomial", par = list(prob = 0.6, size = 6)))
plot(goodfit(dummy, type = "binomial", par = list(prob = 0.6, size = 6)))
deg(G)
degree(G)
degree(H)
goodfit(degree(H), type="binomial", method="ML", par=list(size=length(V(H)), prob=0.5))
plot(goodfit(degree(H), type="binomial", method="ML", par=list(size=length(V(H)), prob=0.5)))
test.gof<-(goodfit(degree(H), type="binomial", method="ML", par=list(size=length(V(H)), prob=0.5)))
names(test.gof)
test.gof$par
test.gof$df
summary(test.gof)
plot(test.gof)
?chisq.test
counts<-degree(H)
counts
trials<-75
test.gof<-(goodfit(degree(H), type="binomial", method="ML", par=list(size=length(V(H)), prob=0.5)))
summary(test.gof)
debug(vcd:::summary.goodfit)
test.gof<-(goodfit(degree(H), type="binomial", method="ML", par=list(size=length(V(H))-1, prob=0.5)))
test.gof
summary(test.gof)
#
x.poi<-rpois(n=200,lambda=2.5
)
x.poi
gf<-goodfit(x.poi, type="poisson")
gf
gf$obs
summary(gf)
